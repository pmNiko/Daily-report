teamP = Team.new(
  date: Time.now,
  truck: 22
)
teamP.save!

Claim.all.each do |claim|
  Team.all.each do |team|
    if team.corresponds_this?(claim)
      team.claims << claim
      team.add_user_of(claim)
    elsif !claim.to_a?(team)
      team = Team.new(
        date: Time.now,
        truck: claim.truck,
        :claims => [claim]
      )
      team.save!
      team.add_user_of(claim)
    else
      #nothing
    end
  end
end



has_and_belongs_to_many :claims
has_and_belongs_to_many :users

def include_user?(user)
  self.users.includes?(user)
end

def corresponds_this?(claim)
  user_1 = claim.responsible_first

  if claim.only_one_responsible?
    include_user?(user_1) && truck.eql?(claim.truck)
  else
    user_2 = claim.responsible_second
    include_user?(user_1) && include_user?(user_2) && truck.eql?(claim.truck)
  end
end

def add_user_of(claim)
  if claim.only_one_responsible?
    users << claim.responsible_first
  else
    users << [claim.responsible_first, claim.responsible_second]
  end
end
